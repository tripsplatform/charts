apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nestjs.fullname" . }}
  labels:
    {{- include "nestjs.labels" (dict "context" . "component" .Values.backend.config.name "name" .Values.backend.config.name) | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nestjs.selectorLabels" (dict "context" . "component" .Values.backend.config.name "name" .Values.backend.config.name) | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nestjs.selectorLabels" (dict "context" . "component" .Values.backend.config.name "name" .Values.backend.config.name) | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nestjs.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: check-db-ready
        image: postgres:9.6.5
        command: ['sh', '-c', 
          'until pg_isready -h $DB_HOST -p $DB_PORT; 
          do echo waiting for database; sleep 2; done;']
        env:
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: {{ include "nestjs.fullname" . }}
                key: dbHost
          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name: {{ include "nestjs.fullname" . }}
                key: dbPort
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          ports:
            - name: {{ .Values.service.namedPort | quote}}
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: PORT
              value: {{ .Values.service.port | quote }}
            - name: SERVICE_NAME
              value: {{ include "nestjs.fullname" . }}
            - name: ORIGIN
              value: {{ .Values.global.origin | quote }}
            - name: NODE_ENV
              value: {{ .Values.backend.config.nodeEnv }}
            - name: TYPEORM_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "nestjs.fullname" . }}
                  key: dbHost
            - name: TYPEORM_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ include "nestjs.fullname" . }}
                  key: dbPort
            - name: TYPEORM_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "nestjs.fullname" . }}
                  key: dbUsername
            - name: TYPEORM_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "nestjs.fullname" . }}
                  key: dbPassword
            - name: TYPEORM_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "nestjs.fullname" . }}
                  key: dbDatabaseName
            - name: XRAY_ENABLED
              value: {{ .Values.backend.xray }}
            - name: JSON_RPC_URL
              value: {{ .Values.backend.blockchain.jsonRpc }}
            - name: TUSD_SMART_CONTRACT_ADDRESS
              value: {{ .Values.backend.blockchain.tusdSCAddress }}
            - name: MTCI_SMART_CONTRACT_ADDRESS
              value: {{ .Values.backend.blockchain.mtciSCAddress }}
            - name: MTCI_HOLDING_WALLET_ADDRESS
              value: {{ .Values.backend.blockchain.mtciHoldingWalletAddress }}
            - name: OPERATOR_PRIVATE_KEY
              value: {{ .Values.backend.blockchain.operatorPrivateKey }}
            - name: STABLECOIN_WALLET_PRIVATE_KEY
              value: {{ .Values.backend.blockchain.stableCoinWalletPrivateKey }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.namedPort | quote}}
            initialDelaySeconds: {{ .Values.backend.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.backend.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.backend.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.backend.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.backend.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.namedPort | quote}}
            initialDelaySeconds: {{ .Values.backend.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.backend.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.backend.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.backend.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.backend.readinessProbe.failureThreshold }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
